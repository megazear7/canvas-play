export default class ComputerTicTacToePlayer {
  constructor({
            cells,
            delay,
            playerNumber,
            } = {}) {
    this.cells = cells;
    this.delay = delay;
    this.playerNumber = playerNumber;

    this.netParams = getNetParams();
  }

  makeMove() {
    return new Promise(resolve => {
      setTimeout(() => {
        return resolve(this.chooseCell());
      }, this.delay);
    });
  }

  chooseCell() {
    const preferences = this.findPreferences();
    const guesses = [];
    for (var k = 0; k < preferences.length; k++) {
      guesses.push({ cell: k+1, preference: preferences[k] });
    }
    const filteredGuesses = guesses
      .filter(guess => this.cells[guess.cell-1] === 0)
      .sort(guess => guess.preference - 1)
      .reverse();
    
    if (filteredGuesses.length > 0) {
      return filteredGuesses[0].cell;
    } else {
      console.error("No space available");
      return 1;
    }
  }

  findPreferences() {
    const net = this.buildNet();
    return net[net.length-1];
  }

  buildNet() {
    const net = [];
    net.push(this.observe());
    for (var i = 0; i < this.netParams.weights.length; i++) {
      const layer = [];
      for (var j = 0; j < this.netParams.weights[i].length; j++) {
        layer.push(this.calculateNode(net, i, j));
      }
      net.push(layer);
    }
    return net;
  }

  calculateNode(net, layerIndex, nodeIndex) {
    // An array of length X
    const previousLayer = net[layerIndex];

    // An array of length X
    const edges = this.netParams.weights[layerIndex];

    // A scalar
    const bias = this.netParams.biases[layerIndex][nodeIndex];

    // assert previousLayer.length == edges.length

    let val = -bias;
    for (var i; i < previousLayer.length; i++) {
      val += previousLayer[i] * edges[i];
    }
    return this.sigmoid(val);
  }

  sigmoid(t) {
    return 1/(1+Math.pow(Math.E, -t));
  }

  possibleStates() {
    return [
      0,                                // the space is empty
      this.playerNumber,                // we have the space
      this.playerNumber === 1 ? 2 : 1,  // the opponent has the space
    ];
  }

  observe() {
    const observation = [];
    
    // The first 9 values are a 1 if the space is empty or a 0 otherwise
    // The second 9 values are a 1 if we have the space
    // The third 9 values are a 1 if the opponent has the space
    this.possibleStates().forEach(state => {
      this.cells.forEach(cell => {
        observation.push(cell === state ? 1 : 0);
      });
    });

    return observation;
  }

  randomCell() {
    return Math.floor(Math.random() * 9) + 1;
  }

  updateCells(cells) {
    this.cells = cells;
  }

  printNet() {
    console.log(JSON.stringify(this.netParams));
  }
}

function getNetParams() {
  return {"weights":[[[0.1605956863982545,0.3190602870304833,0.00778251574791522,0.6584235396544389,0.8319463122357107,0.17374900731182397,0.5768613122307666,0.06399484710407588,0.7497905773322917,0.9443449221206526,0.8450119003541998,0.10133793223116805,0.11656056179607877,0.4945759152672424,0.0950987912114698,0.889726343102285,0.1989338143909094,0.10892209913152984,0.7073152792246142,0.5000846604618205,0.8161138174980209,0.8931860571295169,0.7231248083220239,0.8562765748024328,0.45502794829146676,0.8728465364452977,0.7826111779268794],[0.36450008041720894,0.38900911365731705,0.024671580891709288,0.6803747173030594,0.9382765704346614,0.37025451699220513,0.5131491635221259,0.6301959141862048,0.5623894547787445,0.9075356456306973,0.431244616299858,0.6865694718163324,0.0511104821652788,0.4103573317914537,0.631938907256338,0.48304637679231055,0.17823385810791703,0.3922093149443091,0.42320634683718494,0.8848544260058728,0.39794670559970124,0.5823603953755705,0.08249996874025434,0.024575534396610088,0.17745366609904822,0.02316393646657877,0.772907248404662],[0.8261404723957031,0.9661275275188279,0.3864561648934717,0.4209953539484239,0.5460216416404717,0.5965757932118134,0.0009131521418501709,0.7101708861580873,0.8053898195944835,0.0036928034714633906,0.2810328645530722,0.31489349511542986,0.4387999061584815,0.31694262564061026,0.2737843279623766,0.7209024055493456,0.3988639826424798,0.47343846021579195,0.5104753512536944,0.11404656185114215,0.8659023354833673,0.5811578428242938,0.7613673859847954,0.5726692400428637,0.028106134041679498,0.8755337547212683,0.6762960302635532],[0.3875591970071677,0.8993480392626021,0.8782876012183924,0.9373386991677961,0.8537049096457359,0.8170080056270252,0.3837398782339627,0.4400138574406969,0.2989217481196158,0.467873847061296,0.9697814895829571,0.06832738172793862,0.4978543027781017,0.6702323880070402,0.1572059378267383,0.4490870169208867,0.9794150145956175,0.7178933916333445,0.7474715645207672,0.27207282801648613,0.3120453009006885,0.42787592476429404,0.8723809706266326,0.08926077374155117,0.28216749508616656,0.502270802129861,0.22591387549966524],[0.8223819042440121,0.7766957495025433,0.21293594074248867,0.40685481971134885,0.13193899364651962,0.899819217498208,0.6641629252603318,0.6575087178757875,0.8622948969345121,0.6696708051069289,0.12197331327209082,0.7384796022140714,0.4589413214856093,0.18510102065091538,0.146519720375349,0.1832034755625358,0.3401393128868313,0.6975819819521514,0.5455343044299432,0.3877370778904581,0.6800947519665963,0.6645536904549831,0.8350082421559066,0.3656138342262871,0.6707837748763239,0.1383962432395731,0.8624420557695709],[0.6554551536382314,0.6248614662113032,0.23185849348018372,0.3293476034845244,0.7706315118178333,0.5449767236638381,0.5067432892725046,0.541434586341023,0.32464532192063866,0.5846084710939008,0.6706978590258041,0.6765785902650965,0.20150735465612235,0.008706046551176572,0.43297593271001644,0.8997672250154591,0.6191141712454848,0.2818249687788026,0.5273054021654233,0.03425166295347992,0.4632364477422879,0.6208001229658786,0.08902430473307144,0.8287045192031752,0.22179114546564405,0.47820741987570226,0.6229771216600011],[0.09958946538679747,0.2028193128906548,0.914391726489614,0.13261186706371464,0.040993184596402665,0.5669679318826066,0.32473275460446094,0.6627716327464492,0.45871538663944866,0.07741913901721031,0.5106822121956616,0.9938047449178959,0.4737341429926636,0.36206005304288813,0.8323852946022237,0.24070879265417355,0.07832193212510119,0.7190446339094156,0.4961770563869219,0.24638485536941968,0.7115415319443066,0.5325620406091769,0.4327270168383004,0.9575848671210401,0.17838844204727966,0.7193220111867458,0.550758016036649],[0.19520426035879757,0.4419723507668689,0.9430453412764628,0.6151280539183606,0.5862680645804836,0.12722017429248944,0.744161609569481,0.33673748753201194,0.2366499696516824,0.09831386224385241,0.31686990923571634,0.05667081787513362,0.8139835074517712,0.8828289792322199,0.6033780165431553,0.04946082312134936,0.28130672819032587,0.5105250804247603,0.783621431403825,0.7054419511648384,0.6736706273971893,0.642733661647579,0.029168374618255388,0.2726085065885351,0.9487895594752584,0.22092122567917793,0.8077285311496587],[0.7431304792202167,0.36867131973035727,0.987166298979764,0.9583546330709083,0.3234829135173449,0.7268873590735863,0.4380579707183896,0.10500929542534476,0.04067532749642444,0.16811457067131608,0.38956049217461364,0.2785946204720393,0.13027429845985905,0.3700524832595662,0.7812817952949511,0.21943863415206377,0.46790880332914586,0.8518983823957638,0.5227544494222702,0.856383624018958,0.9012306595103283,0.09116222469776014,0.29203805100789726,0.9447791186545134,0.45271692098155847,0.10614080404776138,0.959245278195169],[0.12943623197474308,0.08033153421152006,0.2659848265569602,0.34284082235354396,0.910597857045472,0.47590491503821886,0.6841023265897901,0.21381686641219755,0.6205636296670707,0.26377069014390053,0.7990220868230384,0.1575384919396543,0.23291228686973886,0.9062262717819387,0.8080653038403112,0.8718073321760507,0.23504771938226088,0.2899486614491551,0.3572623941066857,0.6745460917602113,0.9909368802126504,0.10300353699016718,0.07275342449428424,0.07301868239455556,0.1265193374369995,0.42954640050460324,0.6261411820882894],[0.7983168372339944,0.4195305143709611,0.5219853085448263,0.02686082206242335,0.10906274275343009,0.0660144155509419,0.7965006534553336,0.08361873701734401,0.3613385567727956,0.024531759174727163,0.2240518795374713,0.8514929892984218,0.7871540976386286,0.5482993853016656,0.08144000965481979,0.006894183009570343,0.7913088647359006,0.947300461038675,0.7058860718490285,0.04115740058445816,0.7779185143741387,0.9125603605953696,0.9563246790376241,0.06388211859784199,0.1886650122597633,0.4005861611113717,0.39904286754436824],[0.05396474035636856,0.6988429841883614,0.9759934278792355,0.9413994232932332,0.3383148162373708,0.942663352569868,0.5459176507006274,0.8505190178557374,0.5136031885659356,0.3513908401147292,0.0823508275700775,0.2702082441179099,0.061321660662096766,0.6979092061386196,0.6978272551533853,0.48013239861591606,0.3926118224906858,0.013886704062050503,0.11333232841441587,0.7721917457585634,0.33580011751394223,0.593545798056671,0.16747270936956138,0.17426378358721006,0.9691482774686202,0.4286775259446487,0.4652967316691523],[0.4223006324528531,0.2629840785314883,0.6704956912081235,0.8714430592406721,0.03926807583455583,0.8349306586423075,0.9735617817064746,0.026322622886016056,0.6932784686732791,0.28627717427759314,0.6314281642389534,0.5824679722733912,0.9651332812704516,0.236571952005171,0.7643079795904477,0.6341244417486656,0.8726732426366155,0.5059373363462538,0.433895372759165,0.11470496086239135,0.23746339162760122,0.8555819962936104,0.21662876788745034,0.7537262647089322,0.1455406931974299,0.12400340756140937,0.922471504126424],[0.7194025869012337,0.05800454077799788,0.4306694086183491,0.5553882041510898,0.4930670998663178,0.713992628669178,0.6555280010822402,0.9300603861937662,0.6490546389842686,0.7618306331413507,0.29977585820786756,0.8067480629506749,0.020004693022776632,0.8123214265436067,0.41020603659931254,0.9937967474655423,0.5277524071001831,0.6463664602702557,0.8279422454481375,0.9141530527441835,0.46627811281353004,0.863937765564796,0.7858947977751272,0.3339264041981387,0.5327181050531438,0.8397336061546197,0.23416523887602425],[0.1333323489687912,0.2027938562570304,0.058691635171719936,0.40639666695941434,0.7928723906923829,0.4291605722047871,0.3216444204804434,0.08162631626936401,0.9720897369129744,0.8252917823730104,0.07519355073505474,0.9396261204720298,0.8023518541925487,0.38760237341249315,0.8316953753650091,0.7278894249006493,0.483277330653761,0.6524872066945595,0.9798791587386748,0.12971967314179733,0.7764679329318755,0.3189931764976448,0.3319720940549433,0.8176257405912108,0.2892114891337012,0.9336427991608176,0.10672125143300581],[0.8558933955110737,0.7011552393510798,0.4691615181508304,0.006157492738544823,0.3709781353557078,0.4287760493744919,0.910346848046715,0.4506162365795374,0.7795399864413342,0.9358135886820642,0.6073599697073273,0.659988744242044,0.20432305696960795,0.27137730725226783,0.16470007371310302,0.6699895583249937,0.7470320754520807,0.5077881316092079,0.018946317073047503,0.16632994250374056,0.17245936506407133,0.6878149167868441,0.1831092475087972,0.3662739708978717,0.43659724149791646,0.3412608380243711,0.30079870931729324]],[[0.29410675963916133,0.805937621790455,0.6893210659843865,0.6591290042745712,0.27658145037630666,0.2953574238024106,0.28383760283364623,0.4076486071965719,0.18409550926809004,0.8098349013202863,0.5454119945968317,0.22460049276925087,0.3121000515436996,0.8344089551852327,0.3950796124367477,0.1306393825397112],[0.15720920843253428,0.30721226703141613,0.3481031952084339,0.16407731069340947,0.15732435665975109,0.8250890753690232,0.46772581933326407,0.6801639844679879,0.897065190608654,0.1781812189806775,0.15533625334343149,0.053794387546362676,0.003301759645314206,0.6080722318575054,0.28169701408475056,0.8504674481510031],[0.21175141984787227,0.45037050395040734,0.9189393139705937,0.7405541119521228,0.27955699769205666,0.9058100124360582,0.6538916859263115,0.01621881342830145,0.034664830011041925,0.12980499014476243,0.7466332422452726,0.19273277339946326,0.5263252299204404,0.7493031063233995,0.9120783582675303,0.13552277726937367],[0.1495628270889957,0.15879251638855219,0.5303232116500276,0.6968909637121703,0.6271618107157833,0.2919531279906591,0.6612931804159676,0.7063736129264646,0.9209868863029067,0.7438852644959382,0.6009349583118626,0.15497589115159105,0.09821756527305947,0.07669510560319504,0.20633020919291423,0.2876419345024124],[0.7656660943510436,0.9346963627764604,0.34487634292457003,0.3983189850004156,0.4037908739103613,0.5254545827099073,0.2807488711900825,0.12966190912658804,0.9070443580177552,0.29325157501335375,0.633160949306341,0.7055089909555865,0.3266337239559032,0.7689490485278432,0.034340694338157896,0.02798793242440123],[0.5311996378514883,0.10762662969443659,0.9334962901339947,0.35182663025217686,0.9628581118692476,0.03059180626606306,0.6591289458262373,0.672407151801554,0.605048611051145,0.25718515695267685,0.11506495171873476,0.6319472777638764,0.4595093471318106,0.7792614787338747,0.6230106566257567,0.3114943614895824],[0.9554877450446517,0.8227428690222147,0.5150545415800769,0.6823643445579739,0.28099518018037584,0.5202626494860514,0.7845265912301282,0.8105492007331563,0.07158006216476043,0.7069483293049292,0.5132199701833129,0.41129688863686753,0.1164882145730819,0.5036206191681951,0.8529709909988425,0.8154156850909053],[0.2907537522506256,0.8090986413600962,0.3889560582413014,0.6962623738465872,0.1773185714992631,0.9534860156947551,0.8299973071731279,0.401138219454781,0.21735829367907566,0.12684147871314533,0.7289440246540644,0.08850128031365023,0.20816988940145653,0.7350925951278449,0.38274072512029456,0.13948583527500968],[0.679149023989402,0.3569756546264995,0.7901795194324794,0.0773521079225108,0.3302590311793283,0.4957207709688862,0.19837420898571367,0.3983397110316538,0.6854120456959254,0.1302015687583098,0.11712391108511677,0.1481338857032779,0.6323127270605662,0.680421014322671,0.6516933037100181,0.725024544398339],[0.27046422401918613,0.4094936346864182,0.13315690308663908,0.489115621873752,0.008499188838095861,0.45678318103488835,0.2934376289417717,0.9169310132472657,0.022651629714178778,0.5034581942406327,0.8219678808289042,0.32923579531458125,0.34526990273917657,0.7011469301452051,0.885765318693696,0.2546744423701288],[0.7703236819950452,0.9887002078367015,0.46693507564765846,0.6120543583486371,0.785507098859151,0.027027645763184616,0.7821983135144639,0.9796945099229475,0.8388501276742553,0.7717527048118915,0.4216936197397081,0.6944903282851569,0.8051291797939784,0.7043401950967361,0.6331078821098617,0.7412161434124616],[0.4277774627877431,0.8225574506537721,0.6068612506113529,0.6181478313931814,0.09567881985963766,0.11253423735581336,0.4279420865877732,0.7292018886334317,0.9007036917419853,0.987478927220256,0.9792128656742132,0.8342003617017195,0.0392546826898974,0.31989950612159523,0.45584561645608024,0.4621875672735123],[0.2500144554711814,0.8569424064800639,0.05864031072111642,0.9262057810413373,0.9638180828849716,0.544691272472765,0.7941786986684789,0.40799500934316657,0.5809383650869655,0.12432168568518542,0.5643495447340581,0.07734377514537427,0.6678652955679532,0.29310690715763754,0.31127675546952105,0.2272631221188739],[0.6393759055866202,0.3125854476931853,0.21809706301239684,0.40440630928733845,0.613895392733057,0.8000325217753961,0.6915917251806074,0.550483100666515,0.20257008738541704,0.7429929976410847,0.7515513065928043,0.22128370728628277,0.5155383922274874,0.01298042761968432,0.7783809043089984,0.5769626310264429],[0.8347324734805246,0.29406452796893134,0.42173194373031886,0.8129464316518686,0.9664802907514294,0.003633040745702143,0.6068523437126017,0.10083693377335412,0.897216010441158,0.6684506346362822,0.3503255951776596,0.9804827020015512,0.30547749093522136,0.9267332963883201,0.6812261405450981,0.6600717211275009],[0.041805511423068875,0.6030407213420446,0.4541071525658389,0.32466682663215196,0.2743814444999073,0.4118027073771895,0.8873225210440698,0.5671509632320257,0.7535113929506698,0.7432116193629406,0.3825484659965921,0.8443673884134322,0.8619169468876049,0.5293257846770394,0.15990381863988,0.7536594194845385]],[[0.8317234799815654,0.371566807434732,0.4577481741333356,0.09862592213609411,0.702279910375837,0.9725844050045549,0.2034729506626578,0.425748584560917,0.8973009276064179,0.7105847879447424,0.39265933113366747,0.8123583936164813,0.9010069732828132,0.5727607887215189,0.22989181374235068,0.47910700126674377],[0.3568499214713168,0.09121086757986818,0.06481592197994868,0.8861518972926559,0.9582766327602625,0.2283904766600271,0.8919223749311669,0.49284739794093735,0.2503733459853059,0.9003600889385004,0.8485572931219276,0.12530161409296792,0.5930884401242373,0.9916552650286525,0.9286158716718835,0.1479320776310542],[0.48365708613654745,0.23784105615978612,0.7940477786855891,0.7674927953039681,0.3696538589965317,0.6505835337286765,0.5236977926623758,0.14147889831347182,0.651162388072847,0.6163650896909965,0.5263328243839624,0.6872824079002107,0.9335365033187562,0.6524782059812932,0.6505078000254321,0.31687525686332907],[0.004325147023516829,0.5632952154591833,0.23049076375599165,0.6879869825985696,0.10425705540963204,0.2134047281262601,0.6937380570632365,0.12085230359126697,0.11865516800120335,0.0877539026096783,0.2704332234211353,0.9619241529373304,0.7638134290221692,0.3954047341554474,0.3125561432453232,0.15724564971567623],[0.5667883052298646,0.48966202326557284,0.9111845516606991,0.8215654223664559,0.5763970206601556,0.5633933329490239,0.05408889962092145,0.8141557879200179,0.30165988977703795,0.009171083126269686,0.8356798414891287,0.5053378748337798,0.3517291614408149,0.46796282222790575,0.9323160366235486,0.1875696971055092],[0.09615966966764233,0.8726439438705247,0.845358386434722,0.8324169898800999,0.1193661782870179,0.8933941345359249,0.8089145669633324,0.7838042839558459,0.009244444750438285,0.22515844709621513,0.5225542477421881,0.09991987326408314,0.2952464631658791,0.04429332602009062,0.6609703199773282,0.6684109016773363],[0.3703659013734626,0.37398155519904486,0.5990727656496266,0.9389984861550384,0.5144915480839398,0.9106627232223108,0.10186534399585012,0.15142593809521454,0.06725766412241851,0.44402590690811294,0.5840753266123173,0.4732440249220844,0.5512272574673911,0.3585168942736814,0.08385715059781784,0.3248312611111268],[0.7809615739146771,0.8073397103738091,0.1987713853057138,0.2372386161963178,0.3817145153316803,0.3228776527895707,0.19873046965232777,0.7298658911901263,0.45073759339664177,0.7443409521196174,0.18667386572465716,0.6622092988150139,0.8842239845900255,0.7044225929114458,0.4091558748474595,0.9343385937896154],[0.2910550595487853,0.36165964284679397,0.9510015125341817,0.6760444654800888,0.2701214678874413,0.6383618467301961,0.9749889828268596,0.3955902701312566,0.7866161267782377,0.868882947815117,0.1091158449994507,0.6068865502539929,0.6013895390915771,0.7723960611401597,0.46770264765001435,0.3659549875583472]]],"biases":[[0.19852961263432167,0.42528057267719777,0.8413073463928116,0.2697111361400111,0.9265372154293428,0.24207312881951304,0.37151212236864684,0.42493034069030444,0.3195206383813072,0.79319548143192,0.6549986886956418,0.47214544773593836,0.09209618385746676,0.13834801882315517,0.1804489022045408,0.9645894745853238],[0.06418261336621356,0.516815827605412,0.7672833578193075,0.19702928621341176,0.09397863506942339,0.7356200917564959,0.5452636702854552,0.5674576342626378,0.10120880754105843,0.5635786172547423,0.7698649525336261,0.09322801351401244,0.017245154191761092,0.82982692487786,0.20988939969995957,0.3835155386380338],[0.009797374294775008,0.7028473407298914,0.6509897819646946,0.5975506965543651,0.12374021203730812,0.40115915327347684,0.2955376145970052,0.11369540542583922,0.8454795548496765,0.96436991707547,0.11777117136805093,0.4609989667128598,0.13012090764443762,0.9182995242847161,0.5551096518792664,0.4534677346678353]]};
}

function randomSeedData(inputs, hiddenLayers, hiddenLayerSize, outputs) {
  const seedData = {
    weights: [],
    biases: [],
  }

  for (var i = 0; i < (hiddenLayers+1); i++) {
    const layer = [];
    const layerLength = i === hiddenLayers ? outputs : hiddenLayerSize;
    for (var j = 0; j < layerLength; j++) {
      const connections = [];
      const connectionLength = i === 0 ? inputs : hiddenLayerSize;
      for (var k = 0; k < connectionLength; k++) {
        connections.push(Math.random());
      }
      layer.push(connections);
    }
    seedData.weights.push(layer);
  }

  for (var l = 0; l < (hiddenLayers+1); l++) {
    layer = [];
    const layerLength = i === hiddenLayers ? outputs : hiddenLayerSize;
    for (var j = 0; j < layerLength; j++) {
      layer.push(Math.random());
    }
    seedData.biases.push(layer);
  }

  return seedData;
}